name: Java CI
on:
  pull_request: { }
  push: { }
  release:
    types: [ published ]
jobs:
  build:
    name: Build, Test, and Verify
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache dependencies
        uses: actions/cache@v2.1.3
        continue-on-error: true
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build
        id: build
        run: mvn -B -U -DskipTests -Dsurefire.rerunFailingTestsCount=5 clean install
      - name: Archive Test Results on Failure
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-results
          path: target/surefire-reports/
          retention-days: 7
      - name: Publish Unit Test Results
        id: publish
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: failure()
        with:
          files: target/surefire-reports/*.xml
      - name: Deploy SNAPSHOT / Release
        if: success()
        uses: camunda-community-hub/community-action-maven-release@v1
        id: release
        with:
          release-version: ${{ github.event.release.tag_name }}
          release-profile: release
          nexus-usr: ${{ secrets.NEXUS_USR }}
          nexus-psw: ${{ secrets.NEXUS_PSW }}
          maven-usr: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_USR }}
          maven-psw: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_PSW }}
          maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Attach artifacts to GitHub Release (Release only)
        uses: actions/upload-release-asset@v1
        if: ${{ github.event.release && success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_content_type: application/zip
